/*
 * This a simple test file of less project.
 * kuing by 2017-01-21
 * url: http://www.5ikuing.com/less.html
 * 所有属性值后面注释中添加的常量值效果上由亮变淡
 */
//@import "../css/bootstrap.min.css";
@redColor: #FF7E67;   //粉红：#FF7E67
@blueColor: #76D3FF;  //#76D3FF
@headColor: #00CCFF;
//@bggrayColor: #BDC3C7; //灰色背景  #EFF0F4
@bggrayColor: #EFF0F4;
@linkNormalColor:#29C6CD;

//位置常量
@normalLeft: 10px;
@normalTop:20px;

//形状
@borderRadius:5px;
#test1{   //注意这里前面加上 p#test1和不加效果不一样
//  color: @headColor;
//  .row p{
//      color: @redColor;
//      
//  }
    a{
        #namespace > .button(auto);
        .box-shadow(3px,2px,@blur:10px,@color:#FF7E67);   //传参的时候可以使用,分开或者空格 需要带上单位否则不会报错但没有效果
    }
}

h4{
    color:@blueColor;
}

div.row div{
    margin-top:@normalTop;
    padding:20px;
    background:@bggrayColor;
    border-radius: @borderRadius;
    p{
        color:@redColor;
    }
}

//混合：将定义好的属性引入到另一个class中，从而实现一个类继承另一个类中定义好的属性，可以带参数调用，类似于重载.
.normalClass(@radius:5px,@bgcolor:#00FFCC){ //参数默认5px
    border-radius:@radius;
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    background-color: @bgcolor;
}

#test2{
    //.normalClass(@bgcolor:#1FAB89); //默认调用
    //width:100px;
    //height:50px;
    //text-align:center;
    
//  a{ 
//      text-align: center;
//      width:80px;
//      height:30px;
//      #namespace > .button(30px);  //这里的参数可以传递 @lineHeight:30px 或者 30px;
//      //覆盖默认的块级元素 所以加在基本样式的后面
//      display: inline-block;
//   }
     
     a{
         width:80px;
         text-align: center;
         #namespace > .linkStyle;
     }
}

//运算和函数： less提供了基本的算数运算操作,常用的是做属性值和颜色运算. less中的函数一一映射了JS代码,可以使用这些函数操作间接操作属性值

a{
    color: @linkNormalColor;
    //text-decoration: none;
    &:hover{color:@redColor;
    text-decoration: none;}
}

//命名空间和打包封装
#namespace{
    //将button样式打包在 namespace的命名空间内
    .button(@lineHeight){
        display: block;
        line-height:@lineHeight;
        border: 1px solid orangered;
        border-radius: @borderRadius;
        background-color:yellowgreen;
        &:hover{background-color:white;
            text-decoration: none;
        }&:link{text-decoration: none;}
    }
    
    .linkStyle{
        color:dodgerblue;
        display: inline-block;
       &:link{
            text-decoration: none;
        }
    }
    //.tab{...}
    //anything..
}
//使用namespace中button样式属性集
#button1 a{
    color:black;
    #namespace > .button(@lineHeight:auto);  //只使用button的样式
}

//@arguments变量
.box-shadow(@x: 0,@y: 0,@blur:1px,@color:#000){ //用于阴影控制 1px模糊程度 
    box-shadow:@arguments;
    -moz-box-shadow: @arguments;
    -webkit-box-shadow:@arguments;
}
//.box-shadow(2px,5px);

//模式匹配和引导表达式
#model{
    .mixin(dark,@color){
        color:darken(@color,10%);
    }
    .mixin(light,@color){
        color:lighten(@color,10%);
    }
    .mixin(@_,@color){
        display:block;
    }
    //引导混合
    .mixin(@a) when (lightness(@a)>=50%){
        background-color:black;
    }
    .mixin(@a) when (lightness(@a) < 50%){
        background-color:white;
    }
    .mixin(@a){
        color:@a;
    }
}
//#model > .mixin(light,#888);

//作用域: less的作用域根其他编程语言很相似，首先会从本地查找变量，逐次向父级作用域查找，直到找到为止
#page{
    @redColor: white;
    #header{
        color:@redColor;   //white
    }
}

#footer{
    color:@redColor;    //red
}

//注释:  //、/* */

//importing 可以在 main 文件中引入 .less文件，.less后缀可带可不带,导入css文件时必须带上 .css，以免被 less处理
//@import "lib.less";
//@import "lib";
//@import "lib.css";

//字符串插入值 @{name};
//@base-url: "http://5ikuing.com/";
//background-image: url("@{base-url}/images/bg.png");

//javascript表达式： JS表达式可以在 .less文件中使用, 可以通过反引号的方式使用
//@var: `"hello".toUpperCase()+'!'`;




